{ config, myvars, pkgs, ... }: {

# ██╗   ██╗███████╗███████╗██████╗ ███████╗
# ██║   ██║██╔════╝██╔════╝██╔══██╗██╔════╝
# ██║   ██║███████╗█████╗  ██████╔╝███████╗
# ██║   ██║╚════██║██╔══╝  ██╔══██╗╚════██║
# ╚██████╔╝███████║███████╗██║  ██║███████║
#  ╚═════╝ ╚══════╝╚══════╝╚═╝  ╚═╝╚══════╝

  # Don't allow mutation of users outside the config.
  users.mutableUsers = false;
  # Set of default user shell.
  users.defaultUserShell = pkgs.zsh;

  # Groups management.
  users.groups = {
    "${myvars.username}" = {};
    docker = {};
    wireshark = {};
    # For android platform tools's udev rules.
    adbusers = {};
    dialout = {};
    # For openocd (embedded system development).
    plugdev = {};
    # Misc.
    uinput = {};
  };


  # User settings.
  users.users."${myvars.username}" = {
    # Generated by `mkpasswd -m scrypt`.
    # We have to use initialHashedPassword here when using tmpfs for /.
    initialHashedPassword = "$7$CU..../....lLCrv3cSM7Po96hZFMSZb.$91.vy.5RPxXpejgxzMeYdxBcYjWKcPfZm4slnsJudc5";
    home = "/home/${myvars.username}";
    isNormalUser = true;
    shell = pkgs.zsh;
    extraGroups = [
      "${myvars.username}"
      "wheel"
      "video"
       "audio"
      "users"
      "networkmanager"
      "docker"
      "wireshark"
      "adbusers"
      "libvirtd"
    ];
  };


  # Root's ssh key are mainly used for remote deployment.
  users.users.root = {
    initialHashedPassword = config.users.users."${myvars.username}".initialHashedPassword;
    #openssh.authorizedKeys.keys = config.users.users."${myvars.username}".openssh.authorizedKeys.keys;
  };

}
